"""
Django settings for backend_django project.

Generated by 'django-admin startproject' using Django 3.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
# from dotenv import load_dotenv

# load_dotenv()

# Orion host and port
ORION_HOST = os.environ.get("ORION_HOST")
ORION_PORT = os.environ.get("ORION_PORT")

#FIWARE service and servicepath
FIWARE_SERVICE = os.environ.get("FIWARE_SERVICE")
FIWARE_SERVICEPATH = os.environ.get("FIWARE_SERVICEPATH")


# SERVER_IP = "172.17.0.1:8000", "The server ip"

#KEYROCK host and port
KEYROCK_HOST = os.environ.get("KEYROCK_HOST")
KEYROCK_PORT = os.environ.get("KEYROCK_PORT")


MICROSCOPE_ENTITY_ID = os.environ.get("MICROSCOPE_ENTITY_ID")
PIPETE_ENTITY_ID = os.environ.get("PIPETE_ENTITY_ID")


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-o%1h)$tf10r&$s#x!o)ux9dv)r9ful-()+7cg^)t2+&-9(^9ma'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = []

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    #Django apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'constance',
    'constance.backends.database',
    'corsheaders',

    #Local apps
    'entities',
    'core',
    'keyrock',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ALLOW_ALL_ORIGINS = True # If this is used then `CORS_ALLOWED_ORIGINS` will not have any effect
CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_METHODS = [
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
]

CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
    "x-auth-token",
    "entityID"
]

ROOT_URLCONF = 'backend_django.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend_django.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Constance config

CONSTANCE_IGNORE_ADMIN_VERSION_CHECK = True

CONSTANCE_BACKEND = "constance.backends.database.DatabaseBackend"

CONSTANCE_ADDITIONAL_FIELDS = {
    "secret_password_field": [
        "django.forms.fields.CharField",
        {
            "widget": "django.forms.PasswordInput",
            "widget_kwargs": {"render_value": True},
        },
    ]
}

CONSTANCE_CONFIG = {
    "NOTIFICATION_HOST": ("localhost", "Notification Backend host"),    #update
    "NOTIFICATION_PORT": (8678, "Notification Backend port"),           #update
    "ORION_HOST": ("localhost", "Orion host"),                          #update
    "ORION_PORT": (1026, "Orion port"),                                 #update
    "FIWARE_SERVICE": ("", "FIWARE Service"),
    "FIWARE_SERVICEPATH": ("/", "FIWARE Service Path"),
    "SERVER_IP": ("172.17.0.1:8000", "The server ip"),                  #update
    "KEYROCK_HOST": ("192.168.88.252","Keyrock service host"),                                            #update
    "KEYROCK_PORT": ("3005","Keyrock service port"),                                            #update
}


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
